/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * TiDev Titanium Mobile
 * Copyright TiDev, Inc. 04/07/2022-Present
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 *
 */
package ti.mmkv;

import com.tencent.mmkv.MMKV;

import org.appcelerator.kroll.KrollModule;
import org.appcelerator.kroll.annotations.Kroll;

import org.appcelerator.titanium.TiApplication;
import org.appcelerator.kroll.common.Log;
import org.appcelerator.kroll.common.TiConfig;
import org.appcelerator.titanium.util.TiConvert;


@Kroll.module(name="TiMmkv", id="ti.mmkv")
public class TiMmkvModule extends KrollModule
{

	// Standard Debugging variables
	private static final String LCAT = "TiMmkvModule";
	private static final boolean DBG = TiConfig.LOGD;
	MMKV kv;
	// You can define constants with @Kroll.constant, for example:
	// @Kroll.constant public static final String EXTERNAL_NAME = value;

	public TiMmkvModule()
	{
		super();
	}

	@Kroll.onAppCreate
	public static void onAppCreate(TiApplication app)
	{

	}

	// Methods
	@Kroll.method
	public void create()
	{
		String rootDir = MMKV.initialize(TiApplication.getAppCurrentActivity());
		System.out.println("mmkv root: " + rootDir);
		kv = MMKV.defaultMMKV();
	}

	@Kroll.method
	public void setBool(String name, Object value)
	{
		kv.encode(name, TiConvert.toBoolean(value, false));
	}
	@Kroll.method
	public void setString(String name, Object value)
	{
		kv.encode(name, TiConvert.toString(value, ""));
	}
	@Kroll.method
	public void setInt(String name, Object value)
	{
		kv.encode(name, TiConvert.toInt(value, 0));
	}

	@Kroll.method
	public boolean getBool(String name, Object value)
	{
		return kv.decodeBool(name, TiConvert.toBoolean(value, false));
	}
	@Kroll.method
	public String getString(String name, Object value)
	{
		return kv.decodeString(name, TiConvert.toString(value, ""));
	}
	@Kroll.method
	public int getInt(String name, Object value)
	{
		return kv.decodeInt(name, TiConvert.toInt(value, 0));
	}
}

